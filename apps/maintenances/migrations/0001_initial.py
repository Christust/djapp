# Generated by Django 5.0.6 on 2024-07-14 21:27

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modification date')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Deletion date')),
                ('type', models.CharField(max_length=20, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Maintenance type',
                'verbose_name_plural': 'Maintenance types',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMaintenanceType',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(blank=True, editable=False, verbose_name='Creation date')),
                ('modified_at', models.DateField(blank=True, editable=False, verbose_name='Modification date')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Deletion date')),
                ('type', models.CharField(max_length=20, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Maintenance type',
                'verbose_name_plural': 'historical Maintenance types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modification date')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Deletion date')),
                ('description', models.CharField(max_length=25, verbose_name='Description')),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('finished', 'Finished'), ('canceled', 'Canceled')], default='pending', max_length=20, null=True, verbose_name='Status')),
                ('feedback', models.CharField(blank=True, max_length=30, null=True, verbose_name='Feedback')),
                ('cancel_note', models.CharField(blank=True, max_length=35, null=True, verbose_name='Cancel note')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='branches.branch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('maintenance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maintenances.maintenancetype')),
            ],
            options={
                'verbose_name': 'Maintenance request',
                'verbose_name_plural': 'Maintenance requests',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modification date')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Deletion date')),
                ('description', models.CharField(max_length=25, verbose_name='Description')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('maintenance_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maintenances.maintenancerequest')),
            ],
            options={
                'verbose_name': 'Maintenance report',
                'verbose_name_plural': 'Maintenance reports',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMaintenanceReport',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(blank=True, editable=False, verbose_name='Creation date')),
                ('modified_at', models.DateField(blank=True, editable=False, verbose_name='Modification date')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Deletion date')),
                ('description', models.CharField(max_length=25, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('maintenance_request', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='maintenances.maintenancerequest')),
            ],
            options={
                'verbose_name': 'historical Maintenance report',
                'verbose_name_plural': 'historical Maintenance reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaintenanceRequest',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateField(blank=True, editable=False, verbose_name='Creation date')),
                ('modified_at', models.DateField(blank=True, editable=False, verbose_name='Modification date')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Deletion date')),
                ('description', models.CharField(max_length=25, verbose_name='Description')),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('finished', 'Finished'), ('canceled', 'Canceled')], default='pending', max_length=20, null=True, verbose_name='Status')),
                ('feedback', models.CharField(blank=True, max_length=30, null=True, verbose_name='Feedback')),
                ('cancel_note', models.CharField(blank=True, max_length=35, null=True, verbose_name='Cancel note')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('branch', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='branches.branch')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('maintenance_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='maintenances.maintenancetype')),
            ],
            options={
                'verbose_name': 'historical Maintenance request',
                'verbose_name_plural': 'historical Maintenance requests',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
